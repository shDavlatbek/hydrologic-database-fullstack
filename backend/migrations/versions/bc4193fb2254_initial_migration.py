"""Initial migration

Revision ID: bc4193fb2254
Revises: 
Create Date: 2025-01-10 17:27:31.613893

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bc4193fb2254'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('district',
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('region_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('geo_organization',
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('geo_station',
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('geo_welltype',
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('location',
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('parameter_name',
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('region',
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('full_name', sa.String(length=150), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('geo_well',
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('region', sa.Integer(), nullable=True),
    sa.Column('district', sa.Integer(), nullable=True),
    sa.Column('organization', sa.Integer(), nullable=True),
    sa.Column('station', sa.Integer(), nullable=True),
    sa.Column('location', sa.Integer(), nullable=True),
    sa.Column('well_type', sa.Integer(), nullable=True),
    sa.Column('x', sa.Float(), nullable=True),
    sa.Column('y', sa.Float(), nullable=True),
    sa.Column('address', sa.String(length=250), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['district'], ['district.id'], ),
    sa.ForeignKeyConstraint(['location'], ['location.id'], ),
    sa.ForeignKeyConstraint(['organization'], ['geo_organization.id'], ),
    sa.ForeignKeyConstraint(['region'], ['region.id'], ),
    sa.ForeignKeyConstraint(['station'], ['geo_station.id'], ),
    sa.ForeignKeyConstraint(['well_type'], ['geo_welltype.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('number')
    )
    op.create_table('parameter',
    sa.Column('well', sa.Integer(), nullable=False),
    sa.Column('parameter_name', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['parameter_name'], ['parameter_name.id'], ),
    sa.ForeignKeyConstraint(['well'], ['geo_well.number'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('parameter')
    op.drop_table('geo_well')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('region')
    op.drop_table('parameter_name')
    op.drop_table('location')
    op.drop_table('geo_welltype')
    op.drop_table('geo_station')
    op.drop_table('geo_organization')
    op.drop_table('district')
    # ### end Alembic commands ###
